/*
 * Сервис Платежей
 * RESTful API сервиса платежей. Позволяет проверять баланс и осуществлять платежи.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.yandex.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * PaymentResponse
 */
@JsonPropertyOrder({
  PaymentResponse.JSON_PROPERTY_SUCCESS,
  PaymentResponse.JSON_PROPERTY_REMAINING_BALANCE,
  PaymentResponse.JSON_PROPERTY_ERROR
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-19T20:37:53.441780+04:00[Europe/Samara]", comments = "Generator version: 7.12.0")
public class PaymentResponse {
  public static final String JSON_PROPERTY_SUCCESS = "success";
  @jakarta.annotation.Nullable
  private Boolean success;

  public static final String JSON_PROPERTY_REMAINING_BALANCE = "remainingBalance";
  @jakarta.annotation.Nullable
  private Float remainingBalance;

  public static final String JSON_PROPERTY_ERROR = "error";
  @jakarta.annotation.Nullable
  private String error;

  public PaymentResponse() {
  }

  public PaymentResponse success(@jakarta.annotation.Nullable Boolean success) {
    
    this.success = success;
    return this;
  }

  /**
   * Get success
   * @return success
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUCCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuccess() {
    return success;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuccess(@jakarta.annotation.Nullable Boolean success) {
    this.success = success;
  }

  public PaymentResponse remainingBalance(@jakarta.annotation.Nullable Float remainingBalance) {
    
    this.remainingBalance = remainingBalance;
    return this;
  }

  /**
   * Get remainingBalance
   * @return remainingBalance
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMAINING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getRemainingBalance() {
    return remainingBalance;
  }


  @JsonProperty(JSON_PROPERTY_REMAINING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemainingBalance(@jakarta.annotation.Nullable Float remainingBalance) {
    this.remainingBalance = remainingBalance;
  }

  public PaymentResponse error(@jakarta.annotation.Nullable String error) {
    
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(@jakarta.annotation.Nullable String error) {
    this.error = error;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentResponse paymentResponse = (PaymentResponse) o;
    return Objects.equals(this.success, paymentResponse.success) &&
        Objects.equals(this.remainingBalance, paymentResponse.remainingBalance) &&
        Objects.equals(this.error, paymentResponse.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, remainingBalance, error);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentResponse {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    remainingBalance: ").append(toIndentedString(remainingBalance)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

